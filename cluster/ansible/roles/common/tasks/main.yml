---
# Purpose: Common node related settings
#
# Notes:
#   - Executed on all servers in the cluster

# Set os prerequisites

# ==== Stop firewall ====

# RedHat <= 6
#- name: Stop IP Tables
#  service: name={{ item }} state=stopped enabled=no
#  with_items:
#    - iptables
#  when: (ansible_os_family == 'RedHat' and ansible_distribution_major_version <= "6") or ansible_os_family == 'Debian'

# RedHat > 6
#- name: Stop Firewalld
#  service: name={{ item }} state=stopped enabled=no
#  with_items:
#    - firewalld
#  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version > "6"

# ==== Stop firewall ====

#- name: Download Hadoop to local machine
#  become_user: no
#  local_action:
#    module: "get_url"
#    url: "{{ HADOOP_DOWNLOAD_LINK }}/hadoop-{{ HADOOP_VERSION }}/hadoop-{{ HADOOP_VERSION }}.tar.gz"
#    dest: "files/download/hadoop-{{ HADOOP_VERSION }}.tar.gz"
#    mode: 0644

- name: Set file limits
  lineinfile: dest=/etc/security/limits.conf line="{{ item }}" state=present
  with_items:
    - '* soft nofile 65535'
    - '* hard nofile 65535'
    - '* soft memlock unlimited'
    - '* hard memlock unlimited'

- name: Adjust values in sysctl.conf
  sysctl: name={{ item.name }} value={{ item.value }} state={{ item.state }}
  with_items:
    - { name: 'vm.swappiness', value: '1', state: 'present' }
    - { name: 'net.ipv6.conf.all.disable_ipv6', value: '1', state: 'present' }
    - { name: 'net.ipv6.conf.default.disable_ipv6', value: '1', state: 'present' }

- name: Disable transparent huge page defragmentation
  command: echo never > /sys/kernel/mm/transparent_hugepage/defrag

- name: Set hostname
  hostname: name={{ inventory_hostname }}.{{ CLUSTER_DOMAIN }}

# Add shared environment details and install packages

- name: Add variables to /etc/environment
  lineinfile: dest=/etc/environment line="{{ item }}" state=present
  with_items:
    - 'JAVA_HOME={{ JAVA_HOME }}'
    - 'JAVA_LIBRARY_PATH=/usr/local/lib'
    - 'ZOOKEEPER_HOME={{ ZOOKEEPER_HOME }}'
    - 'ZOOCFGDIR={{ ZOOKEEPER_CONFIG }}'
    - 'HADOOP_HOME={{ HADOOP_HOME }}'
    - 'HADOOP_CONF_DIR={{ HADOOP_CONFIG }}'
    - 'HBASE_HOME={{ HBASE_HOME }}'
    - 'HBASE_CONF_DIR={{ HBASE_CONFIG }}'
    - 'ZOO_LOG_DIR={{ LOG_DIR }}/zookeeper'

- name: Set PATH in bash profile
  lineinfile: dest=.bash_profile line="{{ item }}" state=present
  with_items:
    - 'export PATH=$PATH:$HOME/bin:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HBASE_HOME/bin'
  when: ansible_os_family == 'RedHat'

- name: Set PATH in bash profile
  lineinfile: dest=.profile line="{{ item }}" state=present
  with_items:
    - 'export PATH=$PATH:$HOME/bin:$JAVA_HOME/bin:$ZOOKEEPER_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HBASE_HOME/bin'
  when: ansible_os_family == 'Debian'

# ==== Install base packages ====
- name: Install basic OS packages RedHat 7 and later
  yum: name={{ item }} state=present update_cache=yes
  with_items:
    - "{{ BASE_PACKAGES_RH_7 }}"
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version > "6"

- name: Install basic OS packages RedHat 6 and earlier
  yum: name={{ item }} state=present update_cache=yes
  with_items:
    - "{{ BASE_PACKAGES_RH_PRE7 }}"
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version <= "6"

- name: Create SELinux config file if it does not exist
  file: path=/etc/selinux/config state=touch owner=root group=root

- name: Disable SE Linux
  selinux: state=disabled
#  when: ansible_os_family == 'RedHat'

- name: Start services
  service: name={{ item }} state=started enabled=yes
  with_items:
    - ntpd
  when: ansible_os_family == 'RedHat'

- name: Overwrite vagrant changes to /etc/hosts
  copy: src=hosts dest=/etc/hosts owner=root group=root

- name: Create Hadoop system user accounts
  group: name=hadoop state=present
- user: name={{ item }} group=hadoop createhome=no shell=/bin/false state=present
  with_items:
    - "{{ OS_USERS }}"